{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Loader/Loader.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","handleKeyPress","this","onSearch","event","setState","target","value","key","preventDefault","className","onChange","onKeyPress","placeholder","onClick","React","Component","Track","addTrack","removeTrack","onAdd","track","onRemove","isRemoval","src","image","alt","href","preview","rel","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Loader","Playlist","handleNameChange","onNameChange","isLoading","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","authorizeEndpoint","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","images","url","uri","preview_url","savePlaylist","trackURIs","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","find","savedTrack","newPlaylistTracks","push","filter","trackUris","a","newSearchResults","onload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9d2a7d4.chunk.js","sourcesContent":["const clientId = '2440db0c6fd64a218ccdfa355378748a';\r\nconst redirectUri = 'http://mycodefolio.com/jammming'; // Local: 'http://localhost:3000/'\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n        if (accessToken) {\r\n            return accessToken;\r\n        }\r\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n        if (accessTokenMatch && expiresInMatch) {\r\n            accessToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n            window.history.pushState('Access Token', null, '/');\r\n            return accessToken;\r\n        }\r\n\r\n        else {\r\n            const authorizeEndpoint = `https://accounts.spotify.com/authorize?response_type=token&client_id=${clientId}&redirect_uri=${redirectUri}&scope=playlist-modify-public`;\r\n            window.location = authorizeEndpoint;\r\n        }\r\n    },\r\n\r\n    search(term) {\r\n        const accessToken = Spotify.getAccessToken();\r\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {headers: {Authorization: `Bearer ${accessToken}`}})\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n            const tracks = jsonResponse.tracks;\r\n            if (!tracks) {\r\n                return [];\r\n            }\r\n            else {\r\n                return tracks.items.map(track => {\r\n                    return {\r\n                        id: track.id,\r\n                        name: track.name,\r\n                        artist: track.artists[0].name,\r\n                        album: track.album.name,\r\n                        image: track.album.images[2].url,\r\n                        uri: track.uri,\r\n                        preview: track.preview_url\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    },\r\n\r\n    async savePlaylist(name, trackURIs) {\r\n        if (!name || !trackURIs.length) {\r\n            return;\r\n        }\r\n        const accessToken = Spotify.getAccessToken();\r\n        const headers = {Authorization: `Bearer ${accessToken}`};\r\n        const userId = await fetch('https://api.spotify.com/v1/me', {headers: headers}).then(response => response.json()).then(jsonResponse => jsonResponse.id);\r\n        const playlistId = await fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify({name: name})\r\n        }).then(response => response.json()).then(jsonResponse => jsonResponse.id);\r\n        await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\r\n            method: 'POST',\r\n            headers: {Authorization: `Bearer ${accessToken}`, 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({uris: trackURIs})\r\n        });\r\n    }\r\n};\r\n\r\nexport default Spotify;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: 'search_term'\r\n        };\r\n        this.search = this.search.bind(this);\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    }\r\n\r\n    search() {\r\n        this.props.onSearch(this.state.term);\r\n    }\r\n\r\n    handleTermChange(event) {\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    handleKeyPress(event) {\r\n        if (event.key === 'Enter' && this.state.term) {\r\n            this.search();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <input onChange={this.handleTermChange} onKeyPress={this.handleKeyPress} placeholder=\"Enter A Song, Album, or Artist\" />\r\n                <button onClick={this.search} className=\"SearchButton\">SEARCH</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './Track.css';\r\n\r\nclass Track extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addTrack = this.addTrack.bind(this);\r\n        this.removeTrack = this.removeTrack.bind(this);\r\n    }\r\n\r\n    addTrack() {\r\n        this.props.onAdd(this.props.track);\r\n    }\r\n\r\n    removeTrack() {\r\n        this.props.onRemove(this.props.track);\r\n    }\r\n\r\n    renderAction() {\r\n        if (this.props.isRemoval) {\r\n            return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\r\n        }\r\n        else {\r\n            return <button className=\"Track-action\" onClick={this.addTrack}>+</button>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Track\">\r\n                <img src={this.props.track.image} alt=\"Album Art\" />\r\n                <div className=\"Track-information\">\r\n                    <a href={this.props.track.preview} target=\"_blank\" rel=\"noreferrer\"><h3>{this.props.track.name}</h3></a>\r\n                    <p>{this.props.track.artist} | {this.props.track.album}</p>\r\n                </div>\r\n                {this.renderAction()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Track;","import React from 'react';\r\nimport './TrackList.css';\r\nimport Track from '../Track/Track';\r\n\r\nclass TrackList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"TrackList\">\r\n                {this.props.tracks.map(track => {\r\n                    return (\r\n                        <Track\r\n                        key={track.id}\r\n                        track={track}\r\n                        onAdd={this.props.onAdd}\r\n                        onRemove={this.props.onRemove}\r\n                        isRemoval={this.props.isRemoval}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TrackList;","import React from 'react';\r\nimport './SearchResults.css';\r\nimport TrackList from '../TrackList/TrackList';\r\n\r\nclass SearchResults extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"SearchResults\">\r\n                <h2>Results</h2>\r\n                <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React from 'react';\r\nimport './Loader.css';\r\n\r\nclass Loader extends React.Component {\r\n    render() {\r\n        return (\r\n            <section className=\"loading\">\r\n                <div className=\"loader__1\">\r\n                    <div className=\"loader__2\">\r\n                        <div className=\"loader__3\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Playlist.css';\r\nimport TrackList from '../TrackList/TrackList';\r\nimport Loader from '../Loader/Loader';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.props.onNameChange(event.target.value);\r\n    }\r\n    \r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <div className=\"Playlist\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"Playlist\">\r\n                    <input defaultValue={'New Playlist'} onChange={this.handleNameChange} />\r\n                    <TrackList tracks={this.props.playlistTracks} onRemove={this.props.onRemove} isRemoval={true} />\r\n                    <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\r\n                </div>\r\n            );\r\n        } \r\n    }\r\n}\r\n\r\nexport default Playlist;","import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'New Playlist',\n      playlistTracks: [],\n      isLoading: false\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n  \n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n    const newPlaylistTracks = this.state.playlistTracks;\n    newPlaylistTracks.push(track);\n    this.setState({playlistTracks: newPlaylistTracks});\n  }\n\n  removeTrack(track) {\n    const newPlaylistTracks = this.state.playlistTracks.filter(savedTrack => savedTrack.id !== track.id);\n    this.setState({playlistTracks: newPlaylistTracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    this.setState({isLoading: true});\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: [],\n        isLoading: false\n      });\n    });\n  }\n\n  async search(term) {\n    const newSearchResults = await Spotify.search(term);\n    this.setState({searchResults: newSearchResults});\n  }\n\n  componentDidMount() {\n    window.onload = () => Spotify.getAccessToken();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist\n            playlistName={this.state.playlistName}\n            playlistTracks={this.state.playlistTracks}\n            onRemove={this.removeTrack}\n            onNameChange={this.updatePlaylistName}\n            onSave={this.savePlaylist}\n            isLoading={this.state.isLoading}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}